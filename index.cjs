const { makeWASocket, useSingleFileAuthState } = require('@whiskeysockets/baileys');
const readline = require('readline-sync');
const fs = require('fs');

// 1. User ‡§∏‡•á ‡§â‡§∏‡§ï‡§æ ‡§®‡§Ç‡§¨‡§∞ ‡§≤‡•á‡§Ç
const userNumber = readline.question('‡§Ö‡§™‡§®‡§æ WhatsApp ‡§®‡§Ç‡§¨‡§∞ ‡§°‡§æ‡§≤‡•á‡§Ç (country code ‡§∏‡§π‡§ø‡§§, ‡§ú‡•à‡§∏‡•á 919876543210): ');
console.log(`‡§Ü‡§™‡§ï‡§æ ‡§®‡§Ç‡§¨‡§∞: ${userNumber}`);

// 2. Pairing Code ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Å ‡§î‡§∞ ‡§®‡•ã‡§ü‡§ø‡§´‡§ø‡§ï‡•á‡§∂‡§® ‡§¶‡•á‡§Ç
const { state, saveState } = useSingleFileAuthState('./auth_info.json'); // Corrected the file name to avoid confusion
const sock = makeWASocket({ auth: state, printQRInTerminal: false });

async function startBot() {
    if (!state.creds.registered) {
        const code = await sock.requestPairingCode(userNumber);
        console.log('\nüîî ‡§Ö‡§™‡§®‡•á WhatsApp ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§è‡§Å:');
        console.log('Settings > Linked Devices > Link a device > Link with phone number');
        console.log(`\nüëâ ‡§µ‡§π‡§æ‡§Å ‡§Ø‡§π ‡§ï‡•ã‡§° ‡§°‡§æ‡§≤‡•á‡§Ç: ${code}\n`);
        console.log('‚è≥ ‡§™‡•á‡§Ø‡§∞‡§ø‡§Ç‡§ó ‡§™‡•Ç‡§∞‡•Ä ‡§π‡•ã‡§®‡•á ‡§§‡§ï ‡§á‡§Ç‡§§‡§ú‡§æ‡§∞ ‡§ï‡§∞‡•á‡§Ç...\n');
    }

    // 3. ‡§™‡•á‡§Ø‡§∞‡§ø‡§Ç‡§ó ‡§ï‡•á ‡§¨‡§æ‡§¶ Target details ‡§™‡•Ç‡§õ‡•á‡§Ç
    sock.ev.on('connection.update', async (update) => {
        if (update.connection === 'open') {
            console.log('‚úÖ WhatsApp ‡§∏‡•á ‡§ï‡§®‡•á‡§ï‡•ç‡§ü ‡§π‡•ã ‡§ó‡§Ø‡§æ!\n');

            // Target details ‡§≤‡•á‡§Ç
            const targetNumber = readline.question('Target ‡§®‡§Ç‡§¨‡§∞ (country code ‡§∏‡§π‡§ø‡§§, ‡§ú‡•à‡§∏‡•á 919xxxxxxxxx): ');
            const targetName = readline.question('Target ‡§®‡§æ‡§Æ: ');
            const speed = parseInt(readline.question('Speed (‡§∏‡•á‡§ï‡§Ç‡§° ‡§Æ‡•á‡§Ç ‡§°‡§ø‡§≤‡•á): ')) * 1000;
            const msgFile = readline.question('Message file name (‡§ú‡•à‡§∏‡•á message.txt): ');

            // ‡§Æ‡•à‡§∏‡•á‡§ú ‡§´‡§æ‡§á‡§≤ ‡§™‡§¢‡§º‡•á‡§Ç
            let messageText = '';
            try {
                messageText = fs.readFileSync(msgFile, 'utf-8');
            } catch (e) {
                console.log('‚ùå ‡§Æ‡•à‡§∏‡•á‡§ú ‡§´‡§æ‡§á‡§≤ ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡•Ä!');
                process.exit(1);
            }

            // Target ‡§ï‡•ã ‡§Æ‡•à‡§∏‡•á‡§ú ‡§≠‡•á‡§ú‡•á‡§Ç
            await new Promise(resolve => setTimeout(resolve, speed));
            await sock.sendMessage(`${targetNumber}@s.whatsapp.net`, {
                text: `‡§®‡§Æ‡§∏‡•ç‡§§‡•á ${targetName},\n\n${messageText}`
            });
            console.log('‚úÖ ‡§Æ‡•à‡§∏‡•á‡§ú ‡§≠‡•á‡§ú ‡§¶‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ!');
            process.exit(0);
        }
    });
}

startBot();
